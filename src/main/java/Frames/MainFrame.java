/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import com.mycompany.OOP.AttendanceTracking.Attendance;
import com.mycompany.OOP.LeaveManagement.LeaveFrame;
import com.mycompany.OOP.EmployeeVerification.ViewRecordFrame;
import com.mycompany.OOP.EmployeeVerification.AddEmployeeFrame;
import com.mycompany.OOP.EmployeeVerification.DeleteRecordFrame;
import com.mycompany.OOP.EmployeeVerification.Employee1;
import com.mycompany.OOP.EmployeeVerification.Employees;
import com.mycompany.OOP.PayrollCalculation.PayslipFrame;
import com.mycompany.OOP.UserManagement.LogInFrame;
import com.mycompany.OOP.EmployeeVerification.Employees;
import com.mycompany.oopmotorph.DatabaseUtility;
import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JDialog;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author Yennie
 */
public class MainFrame extends javax.swing.JDialog {


    public int getSelectedRowFromTable1() {
        return table1.getSelectedRow();
    }
    
    

    public String getValueAtFromTable1(int row, int column) {
        return table1.getValueAt(row, column).toString();
    }

    /**
     * Creates new form MainFrame
     * @throws java.io.IOException
     * @throws java.io.FileNotFoundException
     * @throws com.opencsv.exceptions.CsvValidationException
     * @throws java.sql.SQLException
     */
public MainFrame() throws IOException, FileNotFoundException, CsvValidationException, SQLException {
        initComponents();
        this.setModalityType(ModalityType.APPLICATION_MODAL);
        try {
            updateTableFromDatabase();
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error loading employee data: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        setLocationRelativeTo(null);
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        Attendance = new javax.swing.JButton();
        addbtn = new javax.swing.JButton();
        payslipbtn = new javax.swing.JButton();
        leavebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        viewbtn1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        payslipbtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table1.setForeground(new java.awt.Color(51, 51, 51));
        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee No.", "Last Name", "First Name", "SSS ", "Philhealth", "TIN", "PAGIBIG"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table1.setSelectionBackground(new java.awt.Color(102, 102, 102));
        table1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        table1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(table1);
        if (table1.getColumnModel().getColumnCount() > 0) {
            table1.getColumnModel().getColumn(0).setPreferredWidth(100);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 870, 180));

        Attendance.setBackground(new java.awt.Color(0, 0, 102));
        Attendance.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Attendance.setForeground(new java.awt.Color(255, 255, 255));
        Attendance.setText("Attendance Record");
        Attendance.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Attendance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AttendanceMouseClicked(evt);
            }
        });
        Attendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttendanceActionPerformed(evt);
            }
        });
        jPanel2.add(Attendance, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, 160, 30));

        addbtn.setBackground(new java.awt.Color(0, 0, 102));
        addbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("Add Record");
        addbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddEmployee(evt);
            }
        });
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        jPanel2.add(addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 161, 30));

        payslipbtn.setBackground(new java.awt.Color(0, 0, 102));
        payslipbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        payslipbtn.setForeground(new java.awt.Color(255, 255, 255));
        payslipbtn.setText("Generate Payslip");
        payslipbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        payslipbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PaySlip(evt);
            }
        });
        payslipbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payslipbtnActionPerformed(evt);
            }
        });
        jPanel2.add(payslipbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 220, 161, 30));

        leavebtn.setBackground(new java.awt.Color(0, 0, 102));
        leavebtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        leavebtn.setForeground(new java.awt.Color(255, 255, 255));
        leavebtn.setText("Apply for Leave");
        leavebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        leavebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leavebtnMouseClicked(evt);
            }
        });
        leavebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leavebtnActionPerformed(evt);
            }
        });
        jPanel2.add(leavebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 161, 30));

        deletebtn.setBackground(new java.awt.Color(0, 0, 102));
        deletebtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("Delete Record");
        deletebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deletebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteRecord(evt);
            }
        });
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        jPanel2.add(deletebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 161, 30));

        exitbtn.setBackground(new java.awt.Color(153, 0, 0));
        exitbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        exitbtn.setForeground(new java.awt.Color(255, 255, 255));
        exitbtn.setText("Exit");
        exitbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exitbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitbtnMouseClicked(evt);
            }
        });
        jPanel2.add(exitbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, 161, 30));

        viewbtn1.setBackground(new java.awt.Color(0, 0, 102));
        viewbtn1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        viewbtn1.setForeground(new java.awt.Color(255, 255, 255));
        viewbtn1.setText("View and Update Record");
        viewbtn1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewbtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewbtn1MouseClicked(evt);
            }
        });
        viewbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbtn1ActionPerformed(evt);
            }
        });
        jPanel2.add(viewbtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 160, 30));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 780, 190));

        payslipbtn1.setBackground(new java.awt.Color(0, 0, 102));
        payslipbtn1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        payslipbtn1.setForeground(new java.awt.Color(255, 255, 255));
        payslipbtn1.setText("Print Payslip");
        payslipbtn1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        payslipbtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                payslipbtn1PaySlip(evt);
            }
        });
        payslipbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payslipbtn1ActionPerformed(evt);
            }
        });
        jPanel2.add(payslipbtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 260, 161, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteRecord(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteRecord
        
        
        
    }//GEN-LAST:event_DeleteRecord

    private void leavebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leavebtnMouseClicked
    
    }//GEN-LAST:event_leavebtnMouseClicked

    private void PaySlip(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaySlip
       



    }//GEN-LAST:event_PaySlip

    private void AddEmployee(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddEmployee

        

    }//GEN-LAST:event_AddEmployee

    
    
    private void updateTableFromDatabase() throws SQLException {
        DefaultTableModel model = new DefaultTableModel(
            new String[]{"Employee No.", "Last Name", "First Name", "SSS", "Philhealth", "TIN", "PAGIBIG"}, 0);

        try (var connection = DatabaseUtility.getConnection();
             var stmt = connection.createStatement();
             var rs = stmt.executeQuery("SELECT employee_id, last_name, first_name, sss_number, philhealth_number, tin_number, pagibig_number FROM employees")) {

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("employee_id"),
                    rs.getString("last_name"),
                    rs.getString("first_name"),
                    rs.getString("sss_number"),
                    rs.getString("philhealth_number"),
                    rs.getString("tin_number"),
                    rs.getString("pagibig_number")
                });
            }
        }

        table1.setModel(model);
    }
    
    private void AttendanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AttendanceMouseClicked
        
        
        
        

    }//GEN-LAST:event_AttendanceMouseClicked

    private void exitbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitbtnMouseClicked
        dispose();
        LogInFrame login = new LogInFrame();
        login.setVisible(true);
    }//GEN-LAST:event_exitbtnMouseClicked

    private void viewbtn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewbtn1MouseClicked
        int selectedRow = table1.getSelectedRow();
    if (selectedRow != -1) {
        String employeeNum = table1.getModel().getValueAt(selectedRow, 0).toString(); // Assuming the first column is the employee number
        Employees employee = new Employees();
        
        try {
            // This is a hypothetical method. Replace it with your actual method to fetch employee details
            employee = employee.getEmployeeDetails(employeeNum); // Method to implement
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Failed to load employee details.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row to view or update the record.", "No Selection", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_viewbtn1MouseClicked

    private void AttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttendanceActionPerformed
        Attendance attendance = new Attendance(); // Create an instance of the Attendance class
    attendance.setVisible(true); // Make the Attendance frame visible
    this.dispose(); // Close the current frame, optional depending on your requirements

    }//GEN-LAST:event_AttendanceActionPerformed

    private void viewbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbtn1ActionPerformed
        int selectedRow = table1.getSelectedRow();
        if (selectedRow >= 0) {
            String employeeNum = table1.getValueAt(selectedRow, 0).toString();
            ViewRecordFrame viewFrame = new ViewRecordFrame(employeeNum);
            viewFrame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a record to view.", "No Selection", JOptionPane.WARNING_MESSAGE);
        }
    
    }//GEN-LAST:event_viewbtn1ActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        int selectedRow = table1.getSelectedRow();
        if (selectedRow >= 0) {
            String employeeNum = table1.getValueAt(selectedRow, 0).toString();
            DeleteRecordFrame deleteFrame = new DeleteRecordFrame(employeeNum);
            deleteFrame.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a record to delete.", "No Selection", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void payslipbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payslipbtnActionPerformed
   int selectedRow = table1.getSelectedRow();
        if (selectedRow >= 0) {
            String employeeNum = table1.getValueAt(selectedRow, 0).toString();

            try (Connection connection = DatabaseUtility.getConnection()) {
                String query = "SELECT employee_id, last_name, first_name, birth_date, address, contact_number, sss_number, " +
                               "philhealth_number, tin_number, pagibig_number, status, position, supervisor, " +
                               "MonthlyRate, ricesubsidy, phoneallowance, clothingallowance, Grossincome, hourlyrate " +
                               "FROM employee_payslip_view WHERE employee_id = ?";
                try (PreparedStatement stmt = connection.prepareStatement(query)) {
                    stmt.setString(1, employeeNum);
                    try (ResultSet rs = stmt.executeQuery()) {
                        if (rs.next()) {
                            Employees employee = new Employees();
                            employee.setemployeenum(rs.getString("employee_id"));
                            employee.setlastname(rs.getString("last_name"));
                            employee.setfirstname(rs.getString("first_name"));
                            employee.setbirthday(rs.getString("birth_date"));
                            employee.setaddress(rs.getString("address"));
                            employee.setphonenum(rs.getString("contact_number"));
                            employee.setsssnum(rs.getString("sss_number"));
                            employee.setphnum(rs.getString("philhealth_number"));
                            employee.settin(rs.getString("tin_number"));
                            employee.setpgbnum(rs.getString("pagibig_number"));
                            employee.setstatus(rs.getString("status"));
                            employee.setposition(rs.getString("position"));
                            employee.setsupervisor(rs.getString("supervisor"));
                            employee.setbasic(rs.getString("MonthlyRate"));
                            employee.setriceall(rs.getString("ricesubsidy"));
                            employee.setphoneall(rs.getString("phoneallowance"));
                            employee.setclotheall(rs.getString("clothingallowance"));
                            employee.setsmrate(rs.getString("Grossincome"));
                            employee.sethourlyrate(rs.getString("hourlyrate"));

                            // Show the Payslip Frame with the fetched details
                            PayslipFrame payslipframe = new PayslipFrame(employee, this); // Pass the MainFrame instance
                            payslipframe.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(this, "Employee not found", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a record to generate payslip.", "No Selection", JOptionPane.WARNING_MESSAGE);
        }
    
    







    }//GEN-LAST:event_payslipbtnActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
         AddEmployeeFrame addframe = new AddEmployeeFrame();
        addframe.setVisible(true);
    
    
    }//GEN-LAST:event_addbtnActionPerformed

    private void leavebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leavebtnActionPerformed
         int selectedRow = table1.getSelectedRow();
    if (selectedRow >= 0) {
        String employeeNum = table1.getValueAt(selectedRow, 0).toString();
        try {
            Employee1 employees = new Employee1();
            employees.setemployeenum(employeeNum);
            if (employees.fetchEmployeeDetails()) {
                LeaveFrame leaveFrame = new LeaveFrame(employees);
                leaveFrame.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Employee not found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error opening Leave Frame: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a record to apply for leave.", "No Selection", JOptionPane.WARNING_MESSAGE);
    }
    

    
    }//GEN-LAST:event_leavebtnActionPerformed

    private void payslipbtn1PaySlip(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payslipbtn1PaySlip
        // TODO add your handling code here:
    }//GEN-LAST:event_payslipbtn1PaySlip

    private void payslipbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payslipbtn1ActionPerformed
 try {
        // Get the selected employee ID from the table (assuming you have a JTable named employeeTable)
        int selectedRow = table1.getSelectedRow();
        if (selectedRow == -1) {
            // No row selected
            JOptionPane.showMessageDialog(this, "Please select an employee first.");
            return;
        }
        int employeeId = (int) table1.getValueAt(selectedRow, 0);

        // Load the JasperReport
        JasperReport jasperReport = (JasperReport) JRLoader.loadObjectFromFile(
            "C:/Users/Admin/Desktop/New folder/motorph-oop-master/src/main/java/Frames/payslipreport.jasper");

        // Create a map of parameters to pass to the report
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("EMPLOYEE_ID", employeeId);

        // Establish a database connection using DatabaseUtility
        Connection conn = DatabaseUtility.getConnection();

        // Fill the report with data from the database
        JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);

        // Create a JasperViewer instance
        JasperViewer viewer = new JasperViewer(jasperPrint, false);

        // Embed JasperViewer in a JDialog
        JDialog dialog = new JDialog(this, "Payslip Report", true); // true for modal
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.getContentPane().add(viewer.getContentPane());
        dialog.setSize(800, 600); // Set dialog size
        dialog.setLocationRelativeTo(this); // Center on the parent frame
        dialog.setVisible(true);

        // Close the database connection
        conn.close();
    } catch (JRException | SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error generating payslip: " + ex.getMessage());
    }
    
    
    }//GEN-LAST:event_payslipbtn1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainFrame().setVisible(true);
                } catch (IOException | CsvValidationException | SQLException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Attendance;
    private javax.swing.JButton addbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton exitbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leavebtn;
    private javax.swing.JButton payslipbtn;
    private javax.swing.JButton payslipbtn1;
    private javax.swing.JTable table1;
    private javax.swing.JButton viewbtn1;
    // End of variables declaration//GEN-END:variables
}
