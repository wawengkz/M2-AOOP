/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import java.io.BufferedWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import com.mycompany.OOP.UserManagement.EmployeeLogInFrame;
import com.mycompany.OOP.EmployeeVerification.Employees;
import com.mycompany.oopmotorph.DatabaseUtility;
import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Time;
import java.time.LocalDateTime;


/**
 *
 * @author Yennie
 */
public class EmployeeMainFrame extends javax.swing.JDialog {
    private String authenticatedUsername; // This should be the only username variable in this class.

    public EmployeeMainFrame() throws IOException {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * Creates new form MainFrame
     * @param username

     */
    
    public EmployeeMainFrame(String username) {
        this.authenticatedUsername = username; // Initialize authenticatedUsername with the passed username.
        initComponents();
        setLocationRelativeTo(null);
        
   
   
    
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        TimeInBt = new javax.swing.JButton();
        TimeOutBt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));
        setResizable(false);
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TimeInBt.setText("Time In");
        TimeInBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeInBtActionPerformed(evt);
            }
        });

        TimeOutBt.setText("Time Out");
        TimeOutBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeOutBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TimeInBt, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(123, 123, 123)
                            .addComponent(TimeOutBt, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(TimeInBt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TimeOutBt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TimeInBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeInBtActionPerformed
        // TODO add your handling code here:
        timeIn();
    }//GEN-LAST:event_TimeInBtActionPerformed

    private void TimeOutBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeOutBtActionPerformed
        // TODO add your handling code here:
        timeOut();
    }//GEN-LAST:event_TimeOutBtActionPerformed

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_formPropertyChange
    private void timeIn() {
        LocalDateTime now = LocalDateTime.now();
        Date currentDate = Date.valueOf(now.toLocalDate());
        Time timeIn = Time.valueOf(now.toLocalTime());

        try (Connection conn = DatabaseUtility.getConnection()) {
            String query = "INSERT INTO attendance (employee_id, employee_name, date, time_in) VALUES (?, ?, ?, ?)";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setInt(1, getEmployeeId(authenticatedUsername)); // Implement getEmployeeId method to fetch the employee ID using authenticatedUsername
                stmt.setString(2, authenticatedUsername);
                stmt.setDate(3, currentDate);
                stmt.setTime(4, timeIn);
                stmt.executeUpdate();
            }
            JOptionPane.showMessageDialog(this, "Clocked in at: " + timeIn);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error writing to database: " + e.getMessage());
        }
    }

    private void timeOut() {
        LocalDateTime now = LocalDateTime.now();
        Time timeOut = Time.valueOf(now.toLocalTime());
        Date currentDate = Date.valueOf(now.toLocalDate());

        try (Connection conn = DatabaseUtility.getConnection()) {
            // Update the existing record with the time out value
            String query = "UPDATE attendance SET time_out = ?, hours_worked = TIMEDIFF(time_out, time_in), overtime_hours = '00:00:00' WHERE employee_id = ? AND date = ?";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setTime(1, timeOut);
                stmt.setInt(2, getEmployeeId(authenticatedUsername)); // Implement getEmployeeId method to fetch the employee ID using authenticatedUsername
                stmt.setDate(3, currentDate);
                stmt.executeUpdate();
            }
            JOptionPane.showMessageDialog(this, "Clocked out at: " + timeOut);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error writing to database: " + e.getMessage());
        }
    }
    

  // Implement the getEmployeeId method to retrieve the employee ID based on the authenticatedUsername
    private int getEmployeeId(String username) {
        // Dummy implementation - replace with actual logic to retrieve employee ID from the database
        return 1;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EmployeeMainFrame().setVisible(true);
                } catch (IOException ex) {
                    java.util.logging.Logger.getLogger(EmployeeMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * Creates new form MainFrame
     * @param username
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TimeInBt;
    private javax.swing.JButton TimeOutBt;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
